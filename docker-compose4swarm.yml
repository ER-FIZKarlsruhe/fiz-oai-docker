version: '3.3'
services:

  elasticsearch-oai:
    hostname: elasticsearch-oai
    image: docker.elastic.co/elasticsearch/elasticsearch:${OAI_ELASTICSEARCH_VERSION_ENV}
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Dlog4j2.formatMsgNoLookups=true -Xms${OAI_ELASTICSEARCH_MEMORY_ENV} -Xmx${OAI_ELASTICSEARCH_MEMORY_ENV}"
      - "LOG4J_FORMAT_MSG_NO_LOOKUPS=true"
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    user: "1000:1000"
    networks:
      - fizoai
    volumes:
      - ${OAI_INSTALL_DIRECTORY_ENV}/logs/elasticsearch_oai:/usr/share/elasticsearch/logs
      - ${OAI_INSTALL_DIRECTORY_ENV}/data/elasticsearch_oai/es-data:/usr/share/elasticsearch/es-data
      - ${OAI_INSTALL_DIRECTORY_ENV}/data/elasticsearch_oai/backup:/usr/share/elasticsearch/backup
      - ${OAI_INSTALL_DIRECTORY_ENV}/configs/elasticsearch_oai/oai-elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ${OAI_INSTALL_DIRECTORY_ENV}/configs/elasticsearch_oai/checkEsHealth.sh:/checkEsHealth.sh
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 5
        window: 240s

  elasticsearch-oai-setup:
    hostname: elasticsearch-oai-setup
    image: rockylinux:9
    depends_on:
      - elasticsearch-oai
    command: ["sh", "/init-fizoai-elasticsearch.sh"]
    networks:
      - fizoai
    volumes:
      - ${OAI_INSTALL_DIRECTORY_ENV}/configs/elasticsearch_oai/init-fizoai-elasticsearch.sh:/init-fizoai-elasticsearch.sh:ro
      - ${OAI_INSTALL_DIRECTORY_ENV}/configs/elasticsearch_oai/item_mapping_es_v${OAI_ELASTICSEARCH_MAPPING_VERSION_ENV}:/item_mapping_es:ro
      - ${OAI_INSTALL_DIRECTORY_ENV}/configs/elasticsearch_oai/wait-for-it.sh:/wait-for-it.sh:ro
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
        window: 240s

  oai-backend:
    hostname: oai-backend
    image: docker.dev.fiz-karlsruhe.de/oai-backend:${OAI_BACKEND_VERSION_ENV}
    environment:
      - "LOG4J_FORMAT_MSG_NO_LOOKUPS=true"
      - "CATALINA_OPTS=-Dlog4j2.formatMsgNoLookups=true -Dorg.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH=true"
    depends_on:
      - elasticsearch-oai-setup
    networks:
      - fizoai
      - cassandra
    volumes:
      - ${OAI_INSTALL_DIRECTORY_ENV}/configs/oai_backend/fiz-oai-backend.properties:/usr/local/tomcat/conf/fiz-oai-backend.properties:ro
      - ${OAI_INSTALL_DIRECTORY_ENV}/logs/oai_backend/:/usr/local/tomcat/logs
      - ${OAI_INSTALL_DIRECTORY_ENV}/configs/oai_backend/checkBackendHealth.sh:/checkBackendHealth.sh
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 5
        window: 240s


  oai-provider:
    hostname: oai-provider
    image: docker.dev.fiz-karlsruhe.de/oai-provider:${OAI_FRONTEND_VERSION_ENV}
    environment:
      - "LOG4J_FORMAT_MSG_NO_LOOKUPS=true"
      - "CATALINA_OPTS=-Dlog4j2.formatMsgNoLookups=true -Dorg.apache.tomcat.util.buf.UDecoder.ALLOW_ENCODED_SLASH=true"
    depends_on:
      - oai-backend
    networks:
      - fizoai
    volumes:
      - ${OAI_INSTALL_DIRECTORY_ENV}/configs/oai_provider/oaicat.properties:/usr/local/tomcat/conf/oaicat.properties:ro
      - ${OAI_INSTALL_DIRECTORY_ENV}/logs/oai_provider/:/usr/local/tomcat/logs
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 5
        window: 240s

networks:
  fizoai:
    driver: overlay
    attachable: true
  cassandra:
    external:
      name: cassandra_cassandra
